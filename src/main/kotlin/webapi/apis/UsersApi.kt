/**
 * ktor-sample
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package webapi.apis

import io.ktor.server.application.*
import io.ktor.server.locations.*
import io.ktor.server.request.*
import io.ktor.server.response.*
import io.ktor.server.routing.Route
import webapi.Paths
import webapi.models.User
import webapi.models.Users

@Suppress("OPT_IN_IS_NOT_ENABLED")
@OptIn(KtorExperimentalLocationsAPI::class)
fun Route.UsersApi() {
    val userList = ArrayList<User>()

    userList.add(User(id = 1, name = "hoge"))
    userList.add(User(id = 2, name = "piyo"))

    get<Paths.usersGet> {
        val users = Users(
            users = userList
        )

        call.respond(users)
    }

    get<Paths.usersIdGet> {
        val user = userList.find { user -> user.id == it.id }
        if (user == null) {
            call.respondText("Not found")
        } else {
            call.respond(user)
        }
    }

    post<Paths.usersIdPost> {

        val req = call.receive<Paths.usersIdPost>()

        val user = req.user

        if (user == null) {
            call.respondText("Invalid parameter")
        } else {
            if (userList.any { p -> p.id == user.id }) {
                userList.removeIf { p -> p.id == user.id }
            }

            userList.add(user)
            call.respond(user)
        }
    }

}
